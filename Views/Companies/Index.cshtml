@using Chrysalis.Enums
@using Microsoft.AspNetCore.Identity;

@model Company
@inject ICompanyService _CompanyService
@inject IFileService _FileService
@inject IProjectService _ProjectService
@inject IRoleService _RoleService
@inject UserManager<BTUser> _UserManager
@inject IInviteService _InviteService

@{
    ViewData["Title"] = "Index";
    BTUser? currentUser = await _UserManager.GetUserAsync(User);
    bool userIsAdmin = await _RoleService.IsUserInRoleAsync(currentUser, nameof(BTRoles.Admin));
}
<div class="row ps-3">
    <!--Start header-->
    <div class="col-12 col-lg-6">
        <div class="card custom-card hover-card overflow-hidden">
            <div class="card-body ps-3">
                <div class="row">
                    <div class="col-12 col-md-4">
                        <h3 class="fw-bold mb-3">@Model.Name</h3>
                        <p class="d-block tx-12 mb-0 text-muted">
                            @Model.Description
                        </p>
                    </div>
                    <div class="col-12 col-md-8 text-end">
                        <img class="company-header-img" alt="Company Image"
                             src="@_FileService.ConvertByteArrayToFile(Model.ImageData,Model.ImageType,DefaultImage.CompanyImage)" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--End header-->
    <!--Start projects-->
    <div class="col-12">
        <div class="d-flex flex-column flex-md-row pb-3">
            <h3 class="fw-bold text-center text-md-justify">Projects</h3>
        </div>
        <partial name="_ProjectsTablePartial" model="@Model.Projects" />
    </div>
    <!--End projects-->
    <!--Start members-->
    <div class="col-12">
        <div class="d-flex flex-column flex-md-row pb-3">
            <h3 class="fw-bold text-center text-md-justify">Members</h3>
            <div class="d-flex mx-auto">
                <input id="cardFilter" type="text" class="form-control" placeholder="Filter" />
            </div>
            @if (await _RoleService.IsUserInRoleAsync(currentUser, nameof(BTRoles.Admin)))
            {
                <div class="ms-md-auto mt-3 mt-md-0 text-center">
                    <a class="btn btn-secondary" asp-action="Create" asp-controller="Invites">Invite Member</a>
                    <a class="btn btn-primary" asp-action="ManageUserRoles" asp-controller="Companies">Manage Roles</a>
                </div>
            }
        </div>
        <!--Start user cards-->
        <div id="userCards" class="row">
            @foreach (BTUser? user in await _CompanyService.GetCompanyUsersAsync(Model.Id))
            {
                <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                    <partial name="_UserPartial" model="user" />
                </div>
            }
        </div>
        <!--End role rows-->
    </div>
    <!--End members-->
    <!--Start invites-->
    @if (userIsAdmin)
    {
        <div class="col-12">
            <div class="d-flex flex-column flex-md-row pb-3">
                <h3 class="fw-bold text-center text-md-justify">Pending Invites</h3>
            </div>
            <div class="card custom-card overflow-hidden">
                <div class="card-body ps-3">
                    @if ((await _InviteService.GetValidInvitesAsync(Model.Id)).Count() == 0)
                    {
                        <h5>There are no pending invites at this time</h5>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table id="inviteTable" class="table text-nowrap table-hover">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Project</th>
                                        <th>Invite Date</th>
                                        <th>Expires</th>
                                        <th>Invited By</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (Invite invite in await _InviteService.GetValidInvitesAsync(Model.Id))
                                    {
                                        <tr>
                                            <td>@invite.InviteeFirstName @invite.InviteeLastName</td>
                                            <td>@invite.InviteeEmail</td>
                                            <td>@invite.Project?.Name</td>
                                            <td>@invite.InviteDate</td>
                                            <td>
                                                @if ((DateTime.Now - invite.InviteDate.ToLocalTime()).TotalDays <= 7)
                                                {
                                                    @invite.InviteDate.AddDays(7)
                                                }
                                                else
                                                {
                                                    <span>Expired</span>
                                                }
                                            </td>
                                            <td>@invite.Invitor?.FullName</td>
                                            <td class="d-flex">
                                                <form asp-action="RenewInvite" asp-controller="Invites" asp-route-inviteId="@invite.Id">
                                                    <button type="submit" class="btn btn-primary">
                                                        <i class="bi bi-recycle"></i>
                                                    </button>
                                                </form>
                                                <form asp-action="CancelInvite" asp-controller="Invites" asp-route-inviteId="@invite.Id">
                                                    <button type="submit" class="btn btn-danger ms-1">
                                                        <i class="bi bi-trash-fill"></i>
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    <!--End invites-->
</div>
@section Scripts{
    <!--Sweet Alerts-->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let message = '@(ViewBag.SwalMessage)';
        if (!message.includes("Error") && message != '') {
            Swal.fire({
                backdrop: false,
                icon: 'success',
                title: message,
                showConfirmButton: true
            });
        } else if (message.includes("Error")) {
            Swal.fire({
                backdrop: false,
                icon: 'error',
                title: 'Oops...',
                text: message
            });
        }
    </script>

    <!--Member button script-->
    <script>
        $(document).ready(function () {
            $('#cardFilter').keyup(function () {
                let searchString = $(this).val();
                $(`#userCards > card:not( :contains(${searchString}))`).hide();
            })
        })
    </script>
}